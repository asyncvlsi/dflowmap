defproc main (chan!(int<32>) main_out)
{
  /* Define channels */
  chan(int<32>) main_I0_;
  chan(int<32>) main_I1_;
  chan(int<32>) const_main_0_0_;
  chan(int<32>) const_main_0_1_;
  chan(int<32>) const_main_1_0_;
  chan(int<1>) main_I2_;
  chan(int<32>) sig_main_I0__main_I2__L;
  chan(int<32>) sig_main_I0__main_I2__R;
  chan(int<32>) sig_main_I1__main_I2__L;
  chan(int<32>) sig_main_I1__main_I2__R;
  chan(int<32>) main_I7_;
  chan(int<32>) main_I8_;
  chan(int<1>) main_I9_;
  chan(int<32>) sig_Merge_loopMS_main_0_main_I9__L;
  chan(int<32>) sig_Merge_loopMS_main_0_main_I9__R;
  chan(int<32>) sig_main_I7__main_I9__L;
  chan(int<32>) sig_main_I7__main_I9__R;
  chan(int<32>) sig_main_I8__main_I9__L;
  chan(int<32>) sig_main_I8__main_I9__R;
  chan(int<32>) Merge_loopMS_main_0;
  chan(int<1>) main_init0;
  chan(int<32>) Merge_main_I5_;
  chan(int<1>) main_init1;
  chan(int<32>) Merge_main_I6_;
  chan(int<1>) main_init2;
  chan(int<32>) Merge_main_I12_;
  /* Handle invocations */
  /* Define dataflow script */
  dataflow {
    0 -> main_I0_;
    10 -> main_I1_;
    0 -> const_main_0_0_;
    0 -> const_main_0_1_;
    1 -> const_main_1_0_;
    Merge_main_I6_ + Merge_main_I5_ -> main_I7_;
    Merge_main_I5_ + const_main_1_0_ -> main_I8_;
    main_I8_ < Merge_loopMS_main_0 -> main_I9_;
    Merge_main_I12_ -> main_out;
    main_I1_ > const_main_0_0_ -> main_I2_;
    main_I9_ -> [1, 0] main_init0;
    main_I9_ -> [1, 0] main_init1;
    main_I9_ -> [1, 0] main_init2;
    {main_init1} const_main_0_1_, sig_main_I8__main_I9__R -> Merge_main_I5_;
    {main_init2} sig_main_I0__main_I2__R, sig_main_I7__main_I9__R -> Merge_main_I6_;
    {main_init0} sig_main_I1__main_I2__R, sig_Merge_loopMS_main_0_main_I9__R -> Merge_loopMS_main_0;
    {main_I2_} sig_main_I0__main_I2__L, sig_main_I7__main_I9__L -> Merge_main_I12_;
    {main_I9_} Merge_loopMS_main_0 -> *, sig_Merge_loopMS_main_0_main_I9__R;
    {main_I9_} main_I7_ -> sig_main_I7__main_I9__L, sig_main_I7__main_I9__R;
    {main_I9_} main_I8_ -> *, sig_main_I8__main_I9__R;
    {main_I2_} main_I0_ -> sig_main_I0__main_I2__L, sig_main_I0__main_I2__R;
    {main_I2_} main_I1_ -> *, sig_main_I1__main_I2__R
  }
}

main m;
